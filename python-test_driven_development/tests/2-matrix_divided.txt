The ''2-matrix_divided'' module
============================

Using ''matrix_divided''
---------------------

>>> 
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>>
>>> matrix_divided([[2, 4], [6, 8]], 2)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[2.3, 5], [2, 7]], 2.4)
[[0.96, 2.08], [0.83, 2.92]]
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>>
>>> matrix_divided(2)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>>
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
>>> matrix_divided(["str", [1, 2, 3]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
>>> matrix_divided(None)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided([[1, 2], ['a', 'b']], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> 
>>> matrix_divided([[1, 2, 4], [3, 9]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> 
>>> matrix_divided([[1, 2, 4], [3, 9, 20]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number
>>> 
>>> matrix_divided([[1, 2], [4, 8]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> 
>>> matrix_divided([[2.3, 5], [2, 7]], float("inf"))
[[0.0, 0.0], [0.0, 0.0]]
>>> matrix_divided([[200, 500], [200, 700]], float("NaN"))
[[nan, nan], [nan, nan]]
